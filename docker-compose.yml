services:
  logregapi:
    image: logregapi
    container_name: logRegApi
    build:
      context: .
      dockerfile: LogReg.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTPS_PORTS=8081
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=youtube
    volumes:
      - ~/.aspnet/https:/https
    networks:
      - local
    depends_on:
      - db
    ports:
      - "8080:8080"
      - "8081:8081"
  db:
    image: postgres:16.2-alpine3.19
    container_name: logRegDb
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=logRegDb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - local
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U postgres -d logRegDb'" ]
      interval: 10s
      timeout: 3s
      retries: 3
volumes:
  postgres_data:
    driver: local
networks:
  local:
    driver: bridge
